import sys
import struct
import select

ROW = 8
COL = 8
DIM = 0.4

kirby = [[0,183,239], [0,183,239], [0,183,239], [0,183,239], [0,183,239], [0,183,239], [0,183,239], [0,183,239],
         [0,183,239], [0,183,239], [238,187,204], [238,187,204], [238,187,204], [238,187,204], [0,183,239], [0,183,239],
         [0,183,239], [238,187,204], [238,187,204], [238,187,204], [238,187,204], [238,187,204], [238,187,204], [0,183,239],
         [0,183,239], [235,133,172], [238,187,204], [0,0,0], [238,187,204], [0,0,0], [238,187,204], [235,133,172],
         [235,133,172], [238,187,204], [238,187,204], [67,80,174], [238,187,204], [67,80,174], [238,187,204], [235,133,172],
         [235,133,172], [235,133,172], [227,91,137], [238,187,204], [238,187,204], [238,187,204], [227,91,137], [0,183,239],
         [0,183,239], [180,43,97], [235,133,172],[235,133,172], [238,187,204], [238,187,204], [180,43,97], [0,183,239],
         [0,183,239], [180,43,97], [198,51,96], [198,51,96], [0,183,239], [180,43,97], [198,51,96], [0,183,239]
        ]


def main():
    try:
        while True:
            # Write to device
            try:
                #with open('/dev/leds0', 'wb') as f:
                with open('/tmp/leds0', 'wb') as f:
                    for i in range(ROW * COL):
                            # Calculate RGB values with proper rounding
                            r = int(kirby[i][0] * DIM)
                            g = int(kirby[i][1] * DIM)
                            b = int(kirby[i][2] * DIM)

                            # Pack as BGR0 (4 bytes) for the LED
                            data = struct.pack('4B', b, g, r, 0)
                            f.write(data)

            except IOError as e:
                print(f"Error writing to device: {e}")
                sys.exit(1)

            # Wait 750ms using select (instead of time.sleep)
            select.select([], [], [], 0.75)

    except KeyboardInterrupt:
        print("\nExiting...")
        sys.exit(0)

if __name__ == '__main__':
    main()
